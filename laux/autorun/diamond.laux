Diamond ??= {}

Diamond.Core ??= {}
Diamond.Network ??= {}
Diamond.Theme ??= {}
Diamond.Animations ??= {}
Diamond.Configurator ??= {}

do
	Diamond.Package = {
		name = "Diamond",
		color = Color(233, 83, 120),
		author = "Brique au Bob & DARZ",
		contact = {
			"http://discord.com/users/709064224252624936",
			"http://discord.com/users/307531336388968458",
		},
		root = "diamond"
	}
end

do
	local { root } = Diamond.Package

	if (SERVER) then
		AddCSLuaFile(root .. "/classes/loader.lua")
		AddCSLuaFile(root .. "/classes/emitter.lua")
	end

	include(root .. "/classes/loader.lua")
	include(root .. "/classes/emitter.lua")
end

do
	function Diamond:log(...)
		local { name, color } = Diamond.Package
		local { text } = Diamond.Core.Loader.logTheme

		MsgC(color, `[${name}] `, SERVER and Color(137, 222, 255) or Color(255, 222, 102), "(" .. (SERVER and "SERVER" or "CLIENT") .. ") ", text, ...)
		Msg("\n")
	end

	Diamond.Core.Emitter:register(Diamond)
	Diamond:emit("loaded")
end

do
	local loader = Diamond.Core.Loader(Diamond.Package)
		loader:addFile("classes/cache", DIAMOND_SHARED)
		loader:addFile("animations/easing/core", DIAMOND_SHARED)
		loader:addDirectory("core", DIAMOND_SHARED)
		loader:addDirectory("classes", DIAMOND_SHARED, {
			recursive = true,
			filesToIgnore = {
				["loader"] = true,
				["emitter"] = true,
			}
		})
		loader:addDirectory("libraries", DIAMOND_SHARED, {
			realms = {
				["shadows"] = DIAMOND_CLIENT
			}
		})
		loader:addDirectory("utilities", DIAMOND_SHARED, {
			realms = {
				["miscellaneous"] = DIAMOND_CLIENT
			}
		})
		loader:addDirectory("animations", DIAMOND_SHARED, {
			recursive = true
		})
		loader:addDirectory("components", DIAMOND_CLIENT, {
			recursive = true
		})
		loader:addDirectory("configurator", DIAMOND_SHARED, {
			recursive = false
		})
		loader:addDirectory("configurator/components", DIAMOND_CLIENT, {
			recursive = true
		})
	loader:finish()
end