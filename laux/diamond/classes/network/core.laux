public class Diamond.Core.Network
	_get _set index

	constructor(index: string)
		self:setIndex(index)
		self:initialize()

		self.cache = Diamond.Cache(`Network.${index}`)
	end

	initialize()
		local index = self:getIndex()
		if (SERVER) then
			util.AddNetworkString(index)
		end

		local function networkHandler(len, client)
			local key = net.ReadUInt(6)
			local callback = self.cache:get(key)

			client = client or CLIENT and LocalPlayer()
			callback(len, client)
		end
		net.Receive(index, networkHandler)
	end

	register(key: number, callback)
		self.cache:store(key, callback)
	end

	--[[
	* @param number key
	* @param function callback
	* @aram nil|Player|CRecipientFilter receiver
	]]
	send(key: number, callback, receiver)
		local index = self:getIndex()
		net.Start(index)
		net.WriteUInt(key, 6)

		callback(self)

		if (SERVER) then
			net.Send(receiver)
		else
			net.SendToServer()
		end
	end
end