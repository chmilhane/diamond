local function on(self, event: string|number, callback)
	if not self.__events[event] then
		self.__events[event] = {}
	end

	self.__events[event][#self.__events[event] + 1] = callback
end

local function emit(self, event: string|number|table, ...)
	local name = istable(event) and event?.name or event
	stopif not self.__events[event]

	for i, event in ipairs(self.__events[name] or {}) do
		event(...)
	end

	if istable(event) and event?.triggerHook then
		local prefix = event.prefix or "Diamond"
		local niceName = name:gsub("^%l", string.upper)

		print(prefix, niceName)
		hook.Run(`${prefix}.${niceName}`, ...)
	end
end

function Diamond:Emitter(base: table)
	base.__events = {}

	base.on = on
	base.emit = emit

	return base
end