local PANEL = {}

local theme = Diamond.Theme
import Lerp, LerpColor from Diamond.Animations

function PANEL:Init()
    self.__states = {
        [true] = {
            icon = utf8.char(0xf00c),
            color = theme:get("green")
        },
        [false] = {
            icon = utf8.char(0xf00d),
            color = theme:get("red")
        }
    }

    self.checkbox = vgui.Create("DButton", self)
    self.checkbox:Dock(LEFT)
    self.checkbox:SetText("")
    self.checkbox:SetWide(60)
    self.checkbox.state = false
    self.checkbox.color = self.__states[self.checkbox.state].color
    self.checkbox.margin = 2
    self.checkbox.animX = 0
    self.checkbox.Paint = (this, w, h) =>
        Diamond:DrawRoundedRect(h / 2, 0, 0, w, h, this.color)
        -- Diamond:DrawCircle((w / 2) - this.animX, h / 2, (h / 2) - this.margin, theme:get("white"), 0, 360, true) --> (this.margin + this.animX)
    end
    self.checkbox.DoClick = (this) =>
        this.state = not this.state ?? false
        LerpColor("color", self.__states[this.state ?? false].color, this)
    end

    self.label = vgui.Create("DLabel", self)
    self:SetTextColor(theme:get("text"))
    self:SetText("Checkbox")
    self:SetFont(Diamond:Font(18))
    self:DockLabel(RIGHT) -- (LEFT, { 10, 0, 0, 0 })
end

function PANEL:GetTextColor()
    return self.label:GetTextColor()
end

function PANEL:SetTextColor(color)
    self.label:SetTextColor(color)
end

function PANEL:GetFont()
    return self.label.GetFont()
end

function PANEL:SetFont(font)
    self.label:SetFont(font)
    self.label:SizeToContents()
end

function PANEL:GetText()
    return self.label:GetText()
end

function PANEL:SetText(text)
    self.label:SetText(text)
    self.label:SizeToContents()
end

function PANEL:DockLabel(dock, margin)
    self.label:Dock(dock)

    if margin then
        self.label:DockMargin(unpack(margin))
    end
end

vgui.Register("Diamond:CheckBox", PANEL)

RunConsoleCommand("diamond")